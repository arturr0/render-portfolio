doctype html
html(lang='en')
  head
    link(rel="preload" as="image" href="https://cdn.glitch.global/0c5397c2-8b81-453e-a90c-14d5c20cfd5d/bgg2.jpg?v=1744915037039")
    link(rel="shortcut icon" href="https://cdn.glitch.global/0c5397c2-8b81-453e-a90c-14d5c20cfd5d/programming2.ico?v=1745001901470")
    style.
      //- #aboutMe {
      //-   background-color: rgb(128, 128, 128, 0.9);
      //- }
      //- #aboutMe:hover {
      //-   background-color: #555;
      //- }
    script(src='https://code.jquery.com/jquery-3.6.0.min.js')
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet' href='public/css/main.css')
    link(rel="stylesheet" href='public/css/fontello.css')
    title My Projects
    script(type='text/javascript').
      let views = 0;
      let stored = false;
      let prevURL;
      const lastPageUrl = document.referrer; 
      prevURL = lastPageUrl.toString();
      currentURL = window.location.href;
      currURL = currentURL.toString();
      console.log(prevURL);
      function updateCounter(type) {
        return fetch('https://artur-bednarski.onrender.com/api?' + type)
        .then((res) => res.json());
      }
      // Update counter on page load or refresh
      if (performance.navigation.type === 1) {
        updateCounter("type=visit-pageview")
        .then((data) => {
          views = data.pageviews;
          const pageviewsCount = document.getElementById('visitEng');
          const pageviewsCount1 = document.getElementById('visitPol');
          if (pageviewsCount || pageviewsCount1) {
            pageviewsCount.textContent = "Visits: " + views; // Display pageviews to the user
            pageviewsCount1.textContent = "Wizyty: " + views;
          }
          sessionStorage.setItem("visit", "x");
          // Store 'views' in localStorage
          localStorage.setItem('views', views);
        })
        .catch((error) => {
          console.error('Error:', error);
        });
      } else {
        // If not a page load or refresh, check if it's a specific page
        if (prevURL != 'https://artur-bednarski.onrender.com/applications' &&
          prevURL != 'https://artur-bednarski.onrender.com/mechanics' &&
          prevURL != 'https://artur-bednarski.onrender.com/games' &&
          prevURL != 'https://artur-bednarski.onrender.com/') {
          updateCounter("type=pageview")
          .then((data) => {
            views = data.pageviews;
            const pageviewsCount = document.getElementById('visitEng');
            const pageviewsCount1 = document.getElementById('visitPol');
            if (pageviewsCount || pageviewsCount1) {
              pageviewsCount.textContent = "Visits: " + views; // Display pageviews to the user
              pageviewsCount1.textContent = "Wizyty: " + views;
            }
            // Store 'views' in localStorage
            localStorage.setItem('views', views);
          })
          .catch((error) => {
            console.error('Error:', error);
          });
        } else {
          stored = true;
        }
      }
    //console.log(window.location.href);
  body
    span.tooltip-textEng
    span.tooltip-textPol
    img.code(src='https://cdn.glitch.global/0c5397c2-8b81-453e-a90c-14d5c20cfd5d/bgg2.jpg?v=1744915037039')
    .content
      .menu
        //- div.submenu1
        div.aboutLeft
        a#aboutMe(href='/' style="border-bottom: solid #84ff0f 2px;").bg
          div#engAbout.toggle-element.visible About Me
          div#polAbout.pol.toggle-element O mnie
        div(style= "width:20px;border-bottom-right-radius: 10px; border-style: solid; border-color: #84ff0f; border-width: 0 2px 2px 0;")
        .dropdown(style="background: none;")
          div#projects.bg
            a#projectsEng.services.toggle-element.visible Projects
            a#projectsPol.services.toggle-element Projekty
          .dropdown-content.hidden(style='display: none;')
            a#apps.service(href="/applications" onclick='hidemenu()')
              i.icon-laptop
            a#mech.service(href='/mechanics' onclick='hidemenu()')
            a#games.service(href='/games' onclick='hidemenu()')
        div.filler(style="border-bottom-left-radius: 10px; border-left: solid #84ff0f 2px; border-bottom: solid #84ff0f 2px;")
        div#visits
          a#visitEng.visits.toggle-element.visible
          a#visitPol.visits.toggle-element
        div#lang(onclick="toggleElements(); changeAllTexts();")
          img(src='https://cdn.glitch.global/fa1cb8d5-4868-42bc-bf52-27fcc0455e8f/POL.jpg?v=1699542939034')#eng.toggle-element.visible
          img(src='https://cdn.glitch.global/fa1cb8d5-4868-42bc-bf52-27fcc0455e8f/UK.jpg?v=1699539920089')#pol.toggle-element 
        div.rightCorner
    .main
      .mainContent
        #viewer
          #image-viewer
            img(src='' onclick="back()")#displayed-image
        #homeContentPojects
          #textEng(style="width: 100%;")
            div.project
              .projectTitle
                | "NEURAL NETWORK FOR MECHANICS"
              .imageDescription
                .image
                  img(src='https://cdn.glitch.global/79283f6f-ef1e-4285-822b-eaefe68c462e/sdof6.png?v=1751257764326' onclick="display()").projectImg
                .description
                  | Neural network-based application designed to predict the behavior of damped vibrations in single degree of freedom mechanical systems. Using supervised learning, the model is trained on solutions to differential equations of motion. The app features real-time visualization of the learning process and allows users to input their own parameters to test the neural network’s predictive capabilities. This combination of AI and dynamic simulation makes app a powerful educational and research tool for understanding vibration analysis.
              .tables(style="width: 35%") 
                .tech
                  div.border.not(style="white-space: nowrap;") 
                    i.icon-cogs
                    p.borderContent
                      | C++
                a(href='https://github.com/arturr0/vibration-ai' target="_blank" rel="noopener noreferrer" style="text-decoration: none; color: inherit;").git
                  .gitEng
                    div.border(style="white-space: nowrap;") 
                      i.icon-github-circled
                      p.borderContent
                        | GitHub
              hr(style="margin-right: 20px; margin-left: 20px; margin-bottom: 0; margin-top: 0;")
            div.project
              .projectTitle
                | "KINEMATICS LAB"
              .imageDescription
                .image
                  img(src='https://cdn.glitch.global/79283f6f-ef1e-4285-822b-eaefe68c462e/m.png?v=1751414877731' onclick="display()").projectImg
                .description
                  | This browser-based visualization tool helps users explore fundamental mechanics through interactive function graphing. Built with p5.js, it dynamically renders position-time functions alongside their velocity and acceleration curves using real-time numerical derivatives. Ideal for introductory dynamics, the app supports polynomial motion, harmonic oscillations, and basic vibrations with adjustable parameters. Features include live tangent lines, area calculations, and intuitive graph scaling—all designed to build intuition around how derivatives represent motion.
              .tables(style="width: 35%") 
                .tech
                  div.border.not(style="white-space: nowrap;") 
                    i.icon-cogs
                    p.borderContent
                      | Math.js, p5.js
                a(href='https://kinematics-lab.onrender.com/' target="_blank" rel="noopener noreferrer" style="text-decoration: none; color: inherit;").link
                  .linkEng
                    div.border(style="white-space: nowrap;") 
                      i.icon-globe
                      p.borderContent
                        | Link
                a(href='https://github.com/arturr0/python-simulator' target="_blank" rel="noopener noreferrer" style="text-decoration: none; color: inherit;").git
                  .gitEng
                    div.border(style="white-space: nowrap;") 
                      i.icon-github-circled
                      p.borderContent
                        | GitHub
              hr(style="margin-right: 20px; margin-left: 20px; margin-bottom: 0; margin-top: 0;")
            div.project
              .projectTitle
                | "EQUATION OF MOTION SOLVER"
              .imageDescription
                .image
                  img(src='public/images/rr.png' onclick="display()").projectImg
                .description
                  | The program's task is to solve a differential equation of motion with a third derivative. The equation is implemented in the Simulink environment as a block diagram. The MATLAB program displays the solution of the equation in the form of plots of frequency, jerk (third derivative), acceleration (second derivative), velocity (first derivative), and displacement as functions of time.
              .tables(style="width: 35%") 
                .tech
                  div.border.not(style="white-space: nowrap;") 
                    i.icon-cogs
                    p.borderContent
                      | MATLAB, Simulink
                a(href='https://github.com/arturr0/simulink-equation' target="_blank" rel="noopener noreferrer" style="text-decoration: none; color: inherit;").git
                  .gitEng
                    div.border(style="white-space: nowrap;") 
                      i.icon-github-circled
                      p.borderContent
                        | GitHub
              hr(style="margin-right: 20px; margin-left: 20px; margin-bottom: 0; margin-top: 0;")
            div.project
              .projectTitle
                | "SHOCK ABSORBER CONTROLLER"
              .imageDescription
                .image
                  img(src='public/images/passanger.png' onclick="display()").projectImg
                .description
                  | The program simulates the operation of a vehicle suspension system after driving over a curb with the front and rear wheels. The system of springs, shock absorbers, and masses is configured in the graphical Amesim environment. Program displays acceleration and vibrations acting on the passenger on a graph, enabling the analysis of the phenomenon. Application allows for the adjustment of suspension element parameters to minimize the discomfort for the passenger when driving over a curb.
              .tables(style="width: 35%") 
                .tech
                  div.border.not(style="white-space: nowrap;") 
                    i.icon-cogs
                    p.borderContent
                      | LMS Amesim
                a(href='https://github.com/arturr0/LMS' target="_blank" rel="noopener noreferrer" style="text-decoration: none; color: inherit;").git
                  .gitEng
                    div.border(style="white-space: nowrap; margin-bottom: 10px") 
                      i.icon-github-circled
                      p.borderContent
                        | GitHub
            div.project
              .projectTitle
                | "DAMPED VIBRATIONS SIMULATOR"
              .imageDescription
                .image
                  img(src='public/images/python.png' onclick="display()").projectImg
                .description
                  | Simulator of forced vibrations with a harmonic force for a system: mass, spring, damper in Python. The program solves the differential equation of motion for a given mass using numerical differentiation. The system's frequency is calculated based on the SciPy library. The computations take a relatively long time, the program would run much faster in C++. However, the significant accessibility Python libraries for developers is an undeniable advantage of this programming language.
              .tables(style="width: 35%") 
                .tech
                  div.border.not(style="white-space: nowrap;") 
                    i.icon-cogs
                    p.borderContent
                      | Python
                a(href='https://github.com/arturr0/python-simulator' target="_blank" rel="noopener noreferrer" style="text-decoration: none; color: inherit;").git
                  .gitEng
                    div.border(style="white-space: nowrap;") 
                      i.icon-github-circled
                      p.borderContent
                        | GitHub
              hr(style="margin-right: 20px; margin-left: 20px; margin-bottom: 0; margin-top: 0;")
    script(type='text/javascript').
      let storedViews = localStorage.getItem('views');
      document.getElementById('visitEng').textContent = "Visits: " + storedViews;
      document.getElementById('visitPol').textContent = "Wizyty: " + storedViews;
      projectTxt = [
        [
          "Neural network-based application designed to predict the behavior of damped vibrations in single degree of freedom mechanical systems. Using supervised learning, the model is trained on solutions to differential equations of motion. The app features real-time visualization of the learning process and allows users to input their own parameters to test the neural network's predictive capabilities. This combination of AI and dynamic simulation makes app a powerful educational and research tool for understanding vibration analysis.",
          "Aplikacja oparta na sieci neuronowej, służąca do przewidywania zachowania drgań tłumionych w układach mechanicznych o jednym stopniu swobody. Model uczy się na podstawie rozwiązań równań różniczkowych ruchu, korzystając z algorytmu uczenia nadzorowanego. Aplikacja oferuje wizualizację procesu uczenia w czasie rzeczywistym oraz możliwość wprowadzenia własnych parametrów przez użytkownika w celu przetestowania dokładności predykcji. Program łączy sztuczną inteligencję z dynamiczną symulacją, stanowiąc cenne narzędzie edukacyjne i badawcze do analizy drgań."
        ],
        [
          "This browser-based visualization tool helps users explore fundamental mechanics through interactive function graphing. Built with p5.js, it dynamically renders position-time functions alongside their velocity and acceleration curves using real-time numerical derivatives. Ideal for introductory dynamics, the app supports polynomial motion, harmonic oscillations, and basic vibrations with adjustable parameters. Features include live tangent lines, area calculations, and intuitive graph scaling—all designed to build intuition around how derivatives represent motion.",
          "Narzędzie wizualizacyjne uruchamiane pomaga użytkownikom poznać podstawy mechaniki poprzez interaktywne wykresy funkcji. Zbudowane w oparciu o p5.js, dynamicznie rysuje funkcje położenia w czasie oraz odpowiadające im wykresy prędkości i przyspieszenia, wykorzystując numeryczne pochodne w czasie rzeczywistym. Aplikacja idealnie nadaje się do nauki podstaw dynamiki — obsługuje ruchy wielomianowe, drgania harmoniczne i proste wibracje z możliwością regulacji parametrów. Wśród funkcji znajdują się m.in. dynamiczne styczne, obliczenia pól pod wykresami oraz intuicyjne skalowanie — wszystko zaprojektowane tak, by budować intuicję dotyczącą fizycznego znaczenia pochodnych w opisie ruchu."
        ],
        [
          "The program's task is to solve a differential equation of motion with a third derivative. The equation is implemented in the Simulink environment as a block diagram. The MATLAB program displays the solution of the equation in the form of plots of frequency, jerk (third derivative), acceleration (second derivative), velocity (first derivative), and displacement as functions of time.", 
          "Zadaniem programu jest rozwiązanie różniczkowego równania ruchu z trzecią pochodną. Równanie zaimplementowane jest w środowisku Simulink w postaci schematu blokowego. Rozwiązanie równania program MATLAB wyświetla w postaci wykresów częstotliwości, zrywności (trzecia pochodna), przyspieszenia (druga pochodna), prędkości (pierwsza pochodna) i drogi w funkcji czasu."
        ],
        [
          "The program simulates the operation of a vehicle suspension system after driving over a curb with the front and rear wheels. The system of springs, shock absorbers, and masses is configured in the graphical Amesim environment. Program displays acceleration and vibrations acting on the passenger on a graph, enabling the analysis of the phenomenon. Application allows for the adjustment of suspension element parameters to minimize the discomfort for the passenger when driving over a curb.",
          "Program symuluje działanie układu zawieszenia pojazdu po najeździe na krawężnik przednim i tylnym kołem. Układ sprężyn, amortyzatorów i mas ustawia się w graficznym środowisku Amesim. Wykres przyspieszeń i drgań działających na pasażera pozwala na analize zjawiska, a aplikacja umożliwia dobór parametrów elementów zawieszenia tak, aby najazd na krawężnik był jak najmniej uciążliwy dla pasażera."
        ],
        [
          "Simulator of forced vibrations with a harmonic force for a system: mass, spring, damper in Python. The program solves the differential equation of motion for a given mass using numerical differentiation. The system's frequency is calculated based on the SciPy library. The computations take a relatively long time, the program would run much faster in C++. However, the significant accessibility Python libraries for developers is an undeniable advantage of this programming language.",
          "Symulator drgań wymuszonych siłą harmoniczną układu: masa, sprężyna, tłumik w języku Python. Program rozwiązuje różniczkowe równanie ruchu danej masy metodą różniczkowania numerycznego. Częstotliwość układu obliczana jest w oparciu o bibliotekę SciPy. Obliczenia trwają relatywnie długo, dużo szybciej program działałby w języku C++, jednak duża przystępność dla programisty bibliotek Python to niewątpliwa zaleta tego narzędzia."
        ]
      ];
    script(src='public/dropdown.js')
